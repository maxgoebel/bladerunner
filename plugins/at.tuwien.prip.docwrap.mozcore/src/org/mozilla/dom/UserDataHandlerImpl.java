

/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozdom4java
 *
 * The Initial Developer of the Original Code is
 * Peter Szinek, Lixto Software GmbH, http://www.lixto.com.
 * Portions created by the Initial Developer are Copyright (C) 2005-2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Peter Szinek (peter@rubyrailways.com)
 *  Michal Ceresna (michal.ceresna@gmail.com)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


package org.mozilla.dom;

//Java imports
import org.mozilla.interfaces.nsIDOMNode;
import org.mozilla.interfaces.nsIDOMUserDataHandler;
import org.mozilla.interfaces.nsIVariant;
import org.w3c.dom.Node;


public class UserDataHandlerImpl implements org.w3c.dom.UserDataHandler
{

    protected nsIDOMUserDataHandler moz;
    protected static WeakValueHashMap instances = new WeakValueHashMap();

    public nsIDOMUserDataHandler getInstance()
    {
	return getInstanceAsnsIDOMUserDataHandler();
    }

    /***************************************************************
     *
     * UserDataHandler implementation code
     *
     ***************************************************************/

    public UserDataHandlerImpl(nsIDOMUserDataHandler mozInst)
    {
        moz = mozInst;
        instances.put(mozInst, this);
    }

    public static UserDataHandlerImpl getDOMInstance(nsIDOMUserDataHandler mozInst)
    {
        
        UserDataHandlerImpl node = (UserDataHandlerImpl) instances.get(mozInst);
        return node == null ? new UserDataHandlerImpl(mozInst) : node;
    }

    public nsIDOMUserDataHandler getInstanceAsnsIDOMUserDataHandler()
    {
        return moz;
    }

    public void handle(final short operation, final String key, final Object data, final Node src, final Node dst)
    {
        //METHOD-BODY-START - autogenerated code
        final nsIDOMNode mozSrc = src!=null ? ((NodeImpl) src).getInstance() : null;
        final nsIDOMNode mozDst = dst!=null ? ((NodeImpl) dst).getInstance() : null;
        final nsIVariant casted_data = (nsIVariant) data;
        final Runnable r = new Runnable() { public void run() {
            getInstanceAsnsIDOMUserDataHandler().handle(operation, key, casted_data, mozSrc, mozDst);
        }};
        ThreadProxy.getSingleton().syncExec(r);
        //METHOD-BODY-END - autogenerated code
    }



}
